From a64b138cbb6e2ca984d0910bca822f69d9485245 Mon Sep 17 00:00:00 2001
From: Rafael Palomar <rafael.palomar@ous-research.no>
Date: Mon, 20 Mar 2023 17:50:49 +0100
Subject: [PATCH 2/2] ENH: Enable install tree

---
 CMake/GenerateIGSIOConfig.cmake     | 20 ++++++++++++++--
 CMake/IGSIOMacros.cmake             | 10 +++++---
 CMakeLists.txt                      | 36 +++++++++++++++++++++++++----
 Codecs/CMakeLists.txt               |  9 ++++++++
 IGSIOCalibration/CMakeLists.txt     | 11 ++++++++-
 IGSIOCommon/CMakeLists.txt          | 15 ++++++++++++
 IGSIOInstallConfig.cmake.in         | 30 ++++++++++++++++++++++++
 SequenceIO/CMakeLists.txt           | 11 +++++++++
 VolumeReconstruction/CMakeLists.txt | 11 ++++++++-
 9 files changed, 141 insertions(+), 12 deletions(-)
 create mode 100644 IGSIOInstallConfig.cmake.in

diff --git a/CMake/GenerateIGSIOConfig.cmake b/CMake/GenerateIGSIOConfig.cmake
index b3f199a..0b67e4d 100644
--- a/CMake/GenerateIGSIOConfig.cmake
+++ b/CMake/GenerateIGSIOConfig.cmake
@@ -14,12 +14,28 @@ SET(VTKSEQUENCEIO_INCLUDE_DIRS_CONFIG ${vtkSequenceIO_INCLUDE_DIRS})
 SET(VTKIGSIOCOMMON_INCLUDE_DIRS_CONFIG ${vtkIGSIOCommon_INCLUDE_DIRS})
 # vtkVolumeReconstruction
 SET(VTKVOLUMERECONSTRUCTION_INCLUDE_DIRS_CONFIG ${vtkVolumeReconstruction_INCLUDE_DIRS})
-
 # vtkIGSIOCalibration
 SET(VTKIGSIOCALIBRATION_INCLUDE_DIRS_CONFIG ${vtkIGSIOCalibration_INCLUDE_DIRS})
-
 # The library dependencies file.
 SET(IGSIO_LIBRARY_TARGETS_FILE_CONFIG ${IGSIO_BINARY_DIR}/IGSIOTargets.cmake)
 
 CONFIGURE_FILE(${IGSIO_SOURCE_DIR}/IGSIOConfig.cmake.in
                ${IGSIO_BINARY_DIR}/IGSIOConfig.cmake @ONLY IMMEDIATE)
+
+
+#-----------------------------------------------------------------------------
+# Configure igsioConfig.cmake (install version)
+
+# vtkSequenceIO
+SET(VTKSEQUENCEIO_INSTALL_INCLUDE_DIRS_CONFIG ${IGSIO_INSTALL_INCLUDE_DIR})
+# vtkIGSIOCommon
+SET(VTKIGSIOCOMMON_INSTALL_INCLUDE_DIRS_CONFIG ${IGSIO_INSTALL_INCLUDE_DIR})
+# vtkVolumeReconstruction
+SET(VTKVOLUMERECONSTRUCTION_INSTALL_INCLUDE_DIRS_CONFIG ${IGSIO_INSTALL_INCLUDE_DIR})
+# vtkIGSIOCalibration
+SET(VTKIGSIOCALIBRATION_INCLUDE_INSTALL_DIRS_CONFIG ${vtkIGSIOCalibration_INCLUDE_DIRS})
+
+# The library dependencies file.
+SET(IGSIO_LIBRARY_TARGETS_FILE_CONFIG ${IGSIO_INSTALL_CMAKE_DIR}/IGSIOTargets.cmake)
+CONFIGURE_FILE(${IGSIO_SOURCE_DIR}/IGSIOInstallConfig.cmake.in
+               ${IGSIO_BINARY_DIR}/install/IGSIOConfig.cmake @ONLY IMMEDIATE)
diff --git a/CMake/IGSIOMacros.cmake b/CMake/IGSIOMacros.cmake
index 6d717de..ca12b40 100644
--- a/CMake/IGSIOMacros.cmake
+++ b/CMake/IGSIOMacros.cmake
@@ -12,9 +12,13 @@ MACRO(IGSIOInstallLibrary _target_name _variable_root)
     LIBRARY DESTINATION "${IGSIO_INSTALL_LIB_DIR}" CONFIGURATIONS ${CONFIG} COMPONENT RuntimeLibraries
     ARCHIVE DESTINATION "${IGSIO_INSTALL_ARCHIVE_DIR}" CONFIGURATIONS ${CONFIG} COMPONENT Development
     )
-  INSTALL(FILES ${${_variable_root}_HDRS}
-    DESTINATION "${IGSIO_INCLUDE_INSTALL}" COMPONENT Development
+
+  IF(NOT IGSIO_NO_DEVELOPMENT_INSTALL)
+    INSTALL(FILES ${${_variable_root}_HDRS}
+      DESTINATION "${IGSIO_INSTALL_INCLUDE_DIR}" COMPONENT Development
     )
+  ENDIF()
+
   GET_TARGET_PROPERTY(_library_type ${_target_name} TYPE)
   IF(${_library_type} STREQUAL SHARED_LIBRARY AND MSVC)
     INSTALL(FILES "$<TARGET_PDB_FILE:${_target_name}>" OPTIONAL
@@ -123,6 +127,6 @@ MACRO(GENERATE_EXPORT_DIRECTIVE_FILE LIBRARY_NAME)
     )
   INSTALL(FILES 
     ${CMAKE_CURRENT_BINARY_DIR}/${MY_EXPORT_HEADER_PREFIX}Export.h
-    DESTINATION "${IGSIO_INCLUDE_INSTALL}"
+    DESTINATION "${IGSIO_INSTALL_INCLUDE_DIR}"
     )
 ENDMACRO()
diff --git a/CMakeLists.txt b/CMakeLists.txt
index cc213d2..ea197c3 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -16,6 +16,10 @@ SET(CMAKE_MODULE_PATH
   ${CMAKE_MODULE_PATH}
   )
 
+IF(NOT DEFINED IGSIO_NO_DEVELOPMENT_INSTALL)
+  SET(IGSIO_NO_DEVELOPMENT_INSTALL ON)
+ENDIF()
+
 # --------------------------------------------------------------------------
 # System Settings
 IF(WIN32)
@@ -50,13 +54,21 @@ IF(NOT IGSIO_INSTALL_LIB_DIR)
   SET(IGSIO_INSTALL_LIB_DIR "lib")
 ENDIF()
 
-IF(NOT IGSIO_INSTALL_DATA_DIR)
-  SET(IGSIO_INSTALL_DATA_DIR "share")
+IF(NOT IGSIO_INSTALL_SHARE_DIR)
+  SET(IGSIO_INSTALL_SHARE_DIR "share")
 ENDIF()
 
 SET(IGSIO_INSTALL_FOLDERNAME "IGSIO-${IGSIO_VERSION_MAJOR}.${IGSIO_VERSION_MINOR}")
-IF(NOT IGSIO_INCLUDE_INSTALL )
-  SET(IGSIO_INCLUDE_INSTALL "include/${IGSIO_INSTALL_FOLDERNAME}")
+IF(NOT IGSIO_INSTALL_INCLUDE_DIR )
+  SET(IGSIO_INSTALL_INCLUDE_DIR "include/${IGSIO_INSTALL_FOLDERNAME}")
+ENDIF()
+
+IF(NOT IGSIO_INSTALL_DATA_DIR)
+  SET(IGSIO_INSTALL_DATA_DIR "${IGSIO_INSTALL_SHARE_DIR}/data")
+ENDIF()
+
+IF(NOT IGSIO_INSTALL_CMAKE_DIR)
+  SET(IGSIO_INSTALL_CMAKE_DIR "${IGSIO_INSTALL_SHARE_DIR}/${IGSIO_INSTALL_FOLDERNAME}/cmake")
 ENDIF()
 
 IF(NOT DEFINED BUILD_SHARED_LIBS)
@@ -179,8 +191,8 @@ ELSE()
   endif()
   unset(_igsio_targets)
 
-  # Create an IGSIOConfig.cmake and IGSIOConfig Version.cmake file for the use from the build tree
   #-----------------------------------------------------------------------------
+  # Create an IGSIOConfig.cmake and IGSIOConfig Version.cmake file for the use from the build tree
   INCLUDE(CMakePackageConfigHelpers)
   write_basic_package_version_file(
     "${CMAKE_CURRENT_BINARY_DIR}/IGSIOConfigVersion.cmake"
@@ -189,4 +201,18 @@ ELSE()
   LIST(APPEND IGSIO_INSTALL_CMAKE_FILES} "${CMAKE_CURRENT_BINARY_DIR}/IGSIOConfigVersion.cmake")
   INCLUDE(${CMAKE_SOURCE_DIR}/CMake/GenerateIGSIOConfig.cmake)
 
+  #-----------------------------------------------------------------------------
+  # Install development files
+  IF(NOT IGSIO_NO_DEVELOPMENT_INSTALL)
+    LIST(APPEND IGSIO_CMAKE_FILES ${CMAKE_CURRENT_BINARY_DIR}/install/IGSIOConfig.cmake)
+    INSTALL(FILES ${IGSIO_CMAKE_FILES}
+      DESTINATION ${IGSIO_INSTALL_CMAKE_DIR}
+      COMPONENT Development)
+
+    LIST(APPEND IGSIO_CONFIGURE_HEADER ${CMAKE_CURRENT_BINARY_DIR}/igsioConfigure.h)
+    INSTALL(FILES ${IGSIO_CONFIGURE_HEADER}
+      DESTINATION ${IGSIO_INSTALL_INCLUDE_DIR}
+      COMPONENT Development)
+  ENDIF()
+
 ENDIF()
diff --git a/Codecs/CMakeLists.txt b/Codecs/CMakeLists.txt
index 144e533..aca9ab5 100644
--- a/Codecs/CMakeLists.txt
+++ b/Codecs/CMakeLists.txt
@@ -78,6 +78,15 @@ TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC $<INSTALL_INTERFACE:${${PROJEC
 
 GENERATE_EXPORT_HEADER(${PROJECT_NAME})
 
+#-----------------------------------------------------------------------------
+# Install the development files
+IF(NOT IGSIO_NO_DEVELOPMENT_INSTALL)
+  FILE(GLOB ${PROJECT_NAME}_HEADERS "*.h")
+  FILE(GLOB ${PROJECT_NAME}_GENERATED_HEADERS "${CMAKE_CURRENT_BINARY_DIR}/*.h")
+  INSTALL(FILES ${${PROJECT_NAME}_HEADERS} ${${PROJECT_NAME}_GENERATED_HEADERS}
+    DESTINATION ${IGSIO_INSTALL_INCLUDE_DIR})
+ENDIF()
+
 SET_PROPERTY(GLOBAL APPEND PROPERTY IGSIO_TARGETS ${PROJECT_NAME})
 
 SET(${PROJECT_NAME}_INCLUDE_DIRS ${${PROJECT_NAME}_INCLUDE_DIRS} CACHE INTERNAL "")
diff --git a/IGSIOCalibration/CMakeLists.txt b/IGSIOCalibration/CMakeLists.txt
index 109f4a0..92df190 100644
--- a/IGSIOCalibration/CMakeLists.txt
+++ b/IGSIOCalibration/CMakeLists.txt
@@ -31,7 +31,7 @@ ADD_LIBRARY(vtk${PROJECT_NAME} ${${PROJECT_NAME}_SRCS} ${${PROJECT_NAME}_HDRS})
 FOREACH(p IN LISTS ${PROJECT_NAME}_INCLUDE_DIRS)
   target_include_directories(vtk${PROJECT_NAME} PUBLIC $<BUILD_INTERFACE:${p}>)
 ENDFOREACH()
-target_include_directories(vtk${PROJECT_NAME} PUBLIC $<INSTALL_INTERFACE:${IGSIO_INCLUDE_INSTALL}>)
+target_include_directories(vtk${PROJECT_NAME} PUBLIC $<INSTALL_INTERFACE:${IGSIO_INSTALL_INCLUDE_DIR}>)
 TARGET_LINK_LIBRARIES(vtk${PROJECT_NAME} PUBLIC ${${PROJECT_NAME}_LIBS})
 
 SET_PROPERTY(GLOBAL APPEND PROPERTY IGSIO_TARGETS vtk${PROJECT_NAME})
@@ -49,3 +49,12 @@ SET(vcProj_vtk${PROJECT_NAME} vtk${PROJECT_NAME};${IGSIO_BINARY_DIR}/src/${PROJE
 # Install
 #
 IGSIOInstallLibrary(vtk${PROJECT_NAME} ${PROJECT_NAME})
+
+#-----------------------------------------------------------------------------
+# Install the development files
+IF(NOT IGSIO_NO_DEVELOPMENT_INSTALL)
+  #FILE(GLOB ${PROJECT_NAME}_HEADERS "*.h") # This is already installed
+  FILE(GLOB ${PROJECT_NAME}_GENERATED_HEADERS "${CMAKE_CURRENT_BINARY_DIR}/*.h")
+  INSTALL(FILES ${${PROJECT_NAME}_GENERATED_HEADERS}
+    DESTINATION ${IGSIO_INSTALL_INCLUDE_DIR})
+ENDIF()
diff --git a/IGSIOCommon/CMakeLists.txt b/IGSIOCommon/CMakeLists.txt
index 6f42202..0b973e1 100644
--- a/IGSIOCommon/CMakeLists.txt
+++ b/IGSIOCommon/CMakeLists.txt
@@ -94,6 +94,8 @@ TARGET_LINK_LIBRARIES(${PROJECT_NAME}
   PRIVATE ${${PROJECT_NAME}_LIBS_PRIVATE}
   )
 
+#-----------------------------------------------------------------------------
+# Install the library files
 INSTALL(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}
   RUNTIME DESTINATION ${IGSIO_INSTALL_BIN_DIR} COMPONENT RuntimeLibraries
   LIBRARY DESTINATION ${IGSIO_INSTALL_LIB_DIR} COMPONENT RuntimeLibraries
@@ -106,6 +108,19 @@ TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC $<INSTALL_INTERFACE:${${PROJEC
 
 GENERATE_EXPORT_HEADER(${PROJECT_NAME})
 
+#-----------------------------------------------------------------------------
+# Install the development files
+IF(NOT IGSIO_NO_DEVELOPMENT_INSTALL)
+  FILE(GLOB ${PROJECT_NAME}_HEADERS "*.h")
+  FILE(GLOB ${PROJECT_NAME}_TEMPLATES "*.txx")
+  FILE(GLOB ${PROJECT_NAME}_GENERATED_HEADERS "${CMAKE_CURRENT_BINARY_DIR}/*.h")
+  INSTALL(FILES
+    ${${PROJECT_NAME}_HEADERS}
+    ${${PROJECT_NAME}_TEMPLATES}
+    ${${PROJECT_NAME}_GENERATED_HEADERS}
+    DESTINATION ${IGSIO_INSTALL_INCLUDE_DIR})
+ENDIF()
+
 SET_PROPERTY(GLOBAL APPEND PROPERTY IGSIO_TARGETS ${PROJECT_NAME})
 
 SET(${PROJECT_NAME}_INCLUDE_DIRS ${${PROJECT_NAME}_INCLUDE_DIRS} CACHE INTERNAL "")
diff --git a/IGSIOInstallConfig.cmake.in b/IGSIOInstallConfig.cmake.in
new file mode 100644
index 0000000..6732c43
--- /dev/null
+++ b/IGSIOInstallConfig.cmake.in
@@ -0,0 +1,30 @@
+#-----------------------------------------------------------------------------
+#
+# IGSIOConfig.cmake - IGSIO CMake configuration file for external projects.
+#
+
+# The vtkIGSIOCommon include file directories
+SET(VTKIGSIOCOMMON_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/@IGSIO_INSTALL_INCLUDE_DIR@")
+
+# The vtkSequenceIO include file directories.
+SET(VTKSEQUENCEIO_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/@IGSIO_INSTALL_INCLUDE_DIR@")
+
+# The vtkVolumeReconstruction include file directories.
+SET(VTKVOLUMERECONSTRUCTION_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/@IGSIO_INSTALL_INCLUDE_DIR@")
+
+# The vtkIGSIOCalibration include file directories.
+SET(VTKIGSIOCALIBRATION_INCLUDE_DIRS "@CMAKE_INSTALL_PREFIX@/@IGSIO_INSTALL_INCLUDE_DIR@")
+
+# SET(VTK_DIR "@VTK_DIR@")
+
+# SET(VP9_DIR "@VP9_DIR@")
+
+# IF (NOT @IGSIO_USE_3DSlicer@)
+#   SET(vtkAddon_DIR "@vtkAddon_DIR@")
+#   FIND_PACKAGE(vtkAddon REQUIRED)
+# ENDIF()
+
+SET(IGSIO_BUILD_SEQUENCEIO "@IGSIO_BUILD_SEQUENCEIO@")
+SET(IGSIO_SEQUENCEIO_ENABLE_MKV "@IGSIO_SEQUENCEIO_ENABLE_MKV@")
+SET(IGSIO_BUILD_VOLUMERECONSTRUCTION "@IGSIO_BUILD_VOLUMERECONSTRUCTION@")
+SET(IGSIO_USE_VP9 "@IGSIO_USE_VP9@")
diff --git a/SequenceIO/CMakeLists.txt b/SequenceIO/CMakeLists.txt
index 34cddbd..3511750 100644
--- a/SequenceIO/CMakeLists.txt
+++ b/SequenceIO/CMakeLists.txt
@@ -79,6 +79,8 @@ TARGET_LINK_LIBRARIES(${PROJECT_NAME}
   PRIVATE ${${PROJECT_NAME}_LIBS_PRIVATE}
   )
 
+#-----------------------------------------------------------------------------
+# Install the library files
 INSTALL(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}
   RUNTIME DESTINATION ${IGSIO_INSTALL_BIN_DIR} COMPONENT RuntimeLibraries
   LIBRARY DESTINATION ${IGSIO_INSTALL_LIB_DIR} COMPONENT RuntimeLibraries
@@ -95,6 +97,15 @@ SET_PROPERTY(GLOBAL APPEND PROPERTY IGSIO_TARGETS ${PROJECT_NAME})
 
 SET(${PROJECT_NAME}_INCLUDE_DIRS ${${PROJECT_NAME}_INCLUDE_DIRS} CACHE INTERNAL "")
 
+#-----------------------------------------------------------------------------
+# Install the development files
+IF(NOT IGSIO_NO_DEVELOPMENT_INSTALL)
+  FILE(GLOB ${PROJECT_NAME}_HEADERS "*.h")
+  FILE(GLOB ${PROJECT_NAME}_GENERATED_HEADERS "${CMAKE_CURRENT_BINARY_DIR}/*.h")
+  INSTALL(FILES ${${PROJECT_NAME}_HEADERS} ${${PROJECT_NAME}_GENERATED_HEADERS}
+    DESTINATION ${IGSIO_INSTALL_INCLUDE_DIR})
+ENDIF()
+
 # --------------------------------------------------------------------------
 # Testing
 IF(BUILD_TESTING)
diff --git a/VolumeReconstruction/CMakeLists.txt b/VolumeReconstruction/CMakeLists.txt
index 048f396..ef5d39a 100644
--- a/VolumeReconstruction/CMakeLists.txt
+++ b/VolumeReconstruction/CMakeLists.txt
@@ -69,6 +69,15 @@ INSTALL(TARGETS ${PROJECT_NAME} EXPORT ${PROJECT_NAME}
 GENERATE_EXPORT_HEADER(${PROJECT_NAME})
 SET_PROPERTY(GLOBAL APPEND PROPERTY IGSIO_TARGETS ${PROJECT_NAME})
 
+#-----------------------------------------------------------------------------
+# Install the development files
+IF(NOT IGSIO_NO_DEVELOPMENT_INSTALL)
+  FILE(GLOB ${PROJECT_NAME}_HEADERS "*.h")
+  FILE(GLOB ${PROJECT_NAME}_GENERATED_HEADERS "${CMAKE_CURRENT_BINARY_DIR}/*.h")
+  INSTALL(FILES ${${PROJECT_NAME}_HEADERS} ${${PROJECT_NAME}_GENERATED_HEADERS}
+    DESTINATION ${IGSIO_INSTALL_INCLUDE_DIR})
+ENDIF()
+
 # --------------------------------------------------------------------------
 # Set external MS project
 SET(IGSIOLIB_DEPENDENCIES ${IGSIOLIB_DEPENDENCIES} ${PROJECT_NAME} CACHE INTERNAL "" FORCE)
@@ -128,4 +137,4 @@ ENDIF()
 #
 IF(BUILD_TESTING)
   ADD_SUBDIRECTORY(Testing)
-ENDIF()
\ No newline at end of file
+ENDIF()
-- 
2.39.2

