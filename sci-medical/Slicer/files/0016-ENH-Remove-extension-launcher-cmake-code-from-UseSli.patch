From 9ff0cd9cef164d99e1bb0a22275b11b31aecb183 Mon Sep 17 00:00:00 2001
From: Rafael Palomar <rafael.palomar@ous-research.no>
Date: Thu, 26 Jan 2023 16:06:59 +0100
Subject: [PATCH 16/32] ENH: Remove extension/launcher cmake code from
 UseSlicer.cmake

---
 CMake/UseSlicer.cmake.in | 84 ----------------------------------------
 1 file changed, 84 deletions(-)

diff --git a/CMake/UseSlicer.cmake.in b/CMake/UseSlicer.cmake.in
index 324d6a6a89..6be6f44fe3 100644
--- a/CMake/UseSlicer.cmake.in
+++ b/CMake/UseSlicer.cmake.in
@@ -290,26 +290,6 @@ if(DEFINED CMAKE_OSX_DEPLOYMENT_TARGET)
   mark_as_superbuild(VARS CMAKE_OSX_DEPLOYMENT_TARGET:STRING ALL_PROJECTS)
 endif()
 
-if(NOT Slicer_DONT_USE_EXTENSION)
-  #-----------------------------------------------------------------------------
-  # Configure additional launcher settings
-  #-----------------------------------------------------------------------------
-  if(${Slicer_USE_CTKAPPLAUNCHER})
-    if(NOT DEFINED Slicer_SKIP_SlicerBlockAdditionalLauncherSettings)
-      set(Slicer_SKIP_SlicerBlockAdditionalLauncherSettings FALSE)
-    endif()
-    if(NOT ${Slicer_SKIP_SlicerBlockAdditionalLauncherSettings})
-      include(SlicerBlockAdditionalLauncherSettings)
-    endif()
-  endif()
-
-  #-----------------------------------------------------------------------------
-  # Set Slicer_EXTENSION_CMAKE_GENERATOR and EXTENSION_{COMPILER, ARCHITECTURE, BITNESS, OPERATING_SYSTEM}
-  #-----------------------------------------------------------------------------
-
-  include(SlicerBlockUploadExtensionPrerequisites)
-endif()
-
 #-----------------------------------------------------------------------------
 # Set Slicer_BUNDLE_EXTENSIONS_LOCATION variable
 #-----------------------------------------------------------------------------
@@ -383,67 +363,3 @@ if(APPLE)
   file(RELATIVE_PATH thirdparty_lib_relative_dir /${Slicer_INSTALL_THIRDPARTY_LIB_DIR} /${Slicer_INSTALL_ROOT})
   set(Slicer_INSTALL_THIRDPARTY_LIBRARY_LINK_FLAGS "-Wl,-rpath,@loader_path/${thirdparty_lib_relative_dir}")
 endif()
-
-
-#-----------------------------------------------------------------------------
-# Set extension defaults if not already specified
-#-----------------------------------------------------------------------------
-if(NOT Slicer_DONT_USE_EXTENSION)
-  if(NOT DEFINED EXTENSION_DEPENDS)
-    set(EXTENSION_DEPENDS NA) # Specified as a space separated list or 'NA' if any
-  endif()
-  if(NOT DEFINED EXTENSION_LICENSE_FILE)
-    set(EXTENSION_LICENSE_FILE ${Slicer_LICENSE_FILE})
-  endif()
-  if(NOT DEFINED EXTENSION_README_FILE)
-    set(EXTENSION_README_FILE ${Slicer_README_FILE})
-  endif()
-
-  if(NOT DEFINED EXTENSION_SOURCE_DIR)
-    set(EXTENSION_SOURCE_DIR ${CMAKE_SOURCE_DIR})
-  endif()
-  if(NOT DEFINED EXTENSION_SUPERBUILD_BINARY_DIR)
-    set(EXTENSION_SUPERBUILD_BINARY_DIR ${CMAKE_BINARY_DIR})
-  endif()
-  if(NOT DEFINED EXTENSION_BUILD_SUBDIRECTORY)
-    set(EXTENSION_BUILD_SUBDIRECTORY ".")
-  endif()
-  if(NOT DEFINED EXTENSION_ENABLED)
-    set(EXTENSION_ENABLED 1)
-  endif()
-
-  slicer_setting_variable_message("EXTENSION_SOURCE_DIR" SKIP_TRUNCATE)
-  slicer_setting_variable_message("EXTENSION_SUPERBUILD_BINARY_DIR" SKIP_TRUNCATE)
-  slicer_setting_variable_message("EXTENSION_BUILD_SUBDIRECTORY" SKIP_TRUNCATE)
-
-  #-----------------------------------------------------------------------------
-  include(SlicerExtensionDescriptionSpec)
-
-  foreach(var IN LISTS Slicer_EXT_OPTIONAL_METADATA_NAMES)
-    slicer_setting_variable_message(EXTENSION_${var})
-  endforeach()
-
-  #
-  # If not defined, initialize optional variables with their default values.
-  #
-  foreach(var IN LISTS Slicer_EXT_OPTIONAL_METADATA_NAMES)
-    if(NOT DEFINED EXTENSION_${var})
-      set(EXTENSION_${var} "${Slicer_EXT_METADATA_${var}_DEFAULT}")
-      slicer_setting_variable_message(EXTENSION_${var}
-        PRETEXT "Setting default for EXTENSION_${var}")
-    endif()
-  endforeach()
-
-  #-----------------------------------------------------------------------------
-  if(NOT DEFINED Slicer_SKIP_SlicerEnableExtensionTesting)
-    set(Slicer_SKIP_SlicerEnableExtensionTesting FALSE)
-  endif()
-  if(NOT ${Slicer_SKIP_SlicerEnableExtensionTesting}
-     AND NOT "${EXTENSION_NAME}" STREQUAL "")
-     include(CTest)
-     include(ExternalData)
-
-     find_package(Git)
-     mark_as_superbuild(GIT_EXECUTABLE)
-  endif()
-endif()
-- 
2.39.2

