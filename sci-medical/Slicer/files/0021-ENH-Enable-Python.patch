From 39bf35cb17bc7b9943ace01840bd8a2127293bce Mon Sep 17 00:00:00 2001
From: Rafael Palomar <rafael.palomar@rr-research.no>
Date: Tue, 28 Jan 2020 13:14:57 +0100
Subject: [PATCH 21/21] ENH: Enable Python

---
 Base/Logic/CMakeLists.txt                           | 7 ++++++-
 Base/Python/CMakeLists.txt                          | 7 ++++++-
 Base/QTCLI/CMakeLists.txt                           | 6 +++++-
 Base/QTCore/CMakeLists.txt                          | 5 ++++-
 CMake/LastConfigureStep/CMakeLists.txt              | 4 +++-
 CMake/SlicerBlockInstallExternalPythonModules.cmake | 6 +++++-
 CMake/SlicerMacroBuildBaseQtLibrary.cmake           | 7 ++++++-
 CMake/SlicerMacroBuildScriptedModule.cmake          | 6 +++++-
 CMake/SlicerMacroPythonWrapModuleVTKLibrary.cmake   | 6 +++++-
 Libs/MRML/CLI/CMakeLists.txt                        | 6 +++++-
 Libs/MRML/Core/CMakeLists.txt                       | 7 ++++++-
 Libs/MRML/Widgets/CMakeLists.txt                    | 8 +++++++-
 Libs/vtkAddon/CMakeLists.txt                        | 6 +++++-
 Libs/vtkSegmentationCore/CMakeLists.txt             | 6 +++++-
 Libs/vtkTeem/CMakeLists.txt                         | 7 ++++++-
 15 files changed, 79 insertions(+), 15 deletions(-)

diff --git a/Base/Logic/CMakeLists.txt b/Base/Logic/CMakeLists.txt
index 2a81b9a71..884f17374 100644
--- a/Base/Logic/CMakeLists.txt
+++ b/Base/Logic/CMakeLists.txt
@@ -196,13 +196,18 @@ install(TARGETS ${lib_name}
 if(VTK_WRAP_PYTHON)
   include(vtkMacroKitPythonWrap)
 
+  if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${Slicer_INSTALL_LIB_DIR}")
+  endif()
+
   vtkMacroKitPythonWrap(
     KIT_NAME ${lib_name}
     KIT_SRCS ${SlicerBaseLogic_SRCS}
     KIT_PYTHON_LIBRARIES MRMLLogicPythonD
     KIT_INSTALL_BIN_DIR ${Slicer_INSTALL_BIN_DIR}
-    KIT_INSTALL_LIB_DIR ${Slicer_INSTALL_LIB_DIR}
+    KIT_INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     )
+  
   # Export target
   set_property(GLOBAL APPEND PROPERTY Slicer_TARGETS ${lib_name}Python ${lib_name}PythonD)
 
diff --git a/Base/Python/CMakeLists.txt b/Base/Python/CMakeLists.txt
index 9331ad9c9..dc096066a 100644
--- a/Base/Python/CMakeLists.txt
+++ b/Base/Python/CMakeLists.txt
@@ -68,12 +68,17 @@ if(Slicer_USE_PYTHONQT_WITH_TCL)
     )
 endif()
 
+if(NOT DEFINED PYTHON_SITE_DIR)
+  set(PYTHON_SITE_DIR ${Slicer_INSTALL_BIN_DIR})
+endif()
+
 ctkMacroCompilePythonScript(
   TARGET_NAME SlicerBase
   SCRIPTS "${Slicer_PYTHON_SCRIPTS}"
   RESOURCES "${Slicer_PYTHON_RESOURCES}"
   DESTINATION_DIR ${Slicer_BINARY_DIR}/bin/Python
-  INSTALL_DIR ${Slicer_INSTALL_BIN_DIR}
+  INSTALL_DIR ${PYTHON_SITE_DIR}
+  NO_INSTALL_SUBDIR
   )
 
 #-----------------------------------------------------------------------------
diff --git a/Base/QTCLI/CMakeLists.txt b/Base/QTCLI/CMakeLists.txt
index ec60bb195..b058a69cb 100644
--- a/Base/QTCLI/CMakeLists.txt
+++ b/Base/QTCLI/CMakeLists.txt
@@ -127,11 +127,15 @@ endif()
 if(VTK_WRAP_PYTHON)
   include(vtkMacroKitPythonWrap)
 
+    if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${Slicer_INSTALL_LIB_DIR}")
+  endif()
+
   vtkMacroKitPythonWrap(
     KIT_NAME ${PROJECT_NAME}
     KIT_SRCS ${KIT_VTK_SRCS}
     KIT_INSTALL_BIN_DIR ${Slicer_INSTALL_BIN_DIR}
-    KIT_INSTALL_LIB_DIR ${Slicer_INSTALL_LIB_DIR}
+    KIT_INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     KIT_PYTHON_LIBRARIES SlicerBaseLogicPythonD
     )
   set_property(GLOBAL APPEND PROPERTY Slicer_TARGETS ${PROJECT_NAME}Python ${PROJECT_NAME}PythonD)
diff --git a/Base/QTCore/CMakeLists.txt b/Base/QTCore/CMakeLists.txt
index 4930d9056..aaa0e3c1b 100644
--- a/Base/QTCore/CMakeLists.txt
+++ b/Base/QTCore/CMakeLists.txt
@@ -277,4 +277,7 @@ endif()
 #       Extensions. For that reason, the Testing directory is added inconditionnally.
 #       The code specific to Slicer will be excluded directly in either Testing/Python
 #       or Testing/Cxx.
-add_subdirectory(Testing)
+
+if(BUILD_TESTING)
+  add_subdirectory(Testing)
+endif()
diff --git a/CMake/LastConfigureStep/CMakeLists.txt b/CMake/LastConfigureStep/CMakeLists.txt
index 072b9fb24..2a434fdc4 100644
--- a/CMake/LastConfigureStep/CMakeLists.txt
+++ b/CMake/LastConfigureStep/CMakeLists.txt
@@ -41,4 +41,6 @@ include(${Slicer_SOURCE_DIR}/CMake/SlicerGenerateSlicerConfig.cmake)
 include(SlicerPackageAndUploadTarget)
 
 #-----------------------------------------------------------------------------
-include(${Slicer_SOURCE_DIR}/CMake/SlicerCPack.cmake)
+if(Slicer_SUPERBUILD)
+  include(${Slicer_SOURCE_DIR}/CMake/SlicerCPack.cmake)
+endif()
diff --git a/CMake/SlicerBlockInstallExternalPythonModules.cmake b/CMake/SlicerBlockInstallExternalPythonModules.cmake
index 653a554a3..6b8331bf9 100644
--- a/CMake/SlicerBlockInstallExternalPythonModules.cmake
+++ b/CMake/SlicerBlockInstallExternalPythonModules.cmake
@@ -9,8 +9,12 @@ set(_vtk_package "vtk")
 if(EXISTS ${VTK_PYTHON_MODULE}/vtkmodules)
   set(_vtk_package "vtkmodules") # Introduced in VTK9 kitware/vtk@2404228 on 2017.12.15
 endif()
+
+if(NOT DEFINED PYTHON_SITE_DIR)
+  set(PYTHON_SITE_DIR ${Slicer_INSTALL_BIN_DIR}/Python)
+endif()
 install(DIRECTORY ${VTK_PYTHON_MODULE}/${_vtk_package}
-  DESTINATION ${Slicer_INSTALL_BIN_DIR}/Python
+  DESTINATION ${PYTHON_SITE_DIR}
   USE_SOURCE_PERMISSIONS
   COMPONENT Runtime
   # VTK9: Add exclusions to avoid installing VTK's C++ Python modules
diff --git a/CMake/SlicerMacroBuildBaseQtLibrary.cmake b/CMake/SlicerMacroBuildBaseQtLibrary.cmake
index 41c65b2d0..50a1fcbe5 100644
--- a/CMake/SlicerMacroBuildBaseQtLibrary.cmake
+++ b/CMake/SlicerMacroBuildBaseQtLibrary.cmake
@@ -251,12 +251,17 @@ macro(SlicerMacroBuildBaseQtLibrary)
   # PythonQt wrapping
   # --------------------------------------------------------------------------
   if(Slicer_USE_PYTHONQT AND SLICERQTBASELIB_WRAP_PYTHONQT)
+
+    if(NOT DEFINED PYTHON_SITE_DIR)
+      set(PYTHON_SITE_DIR "${Slicer_INSTALL_LIB_DIR}")
+    endif()
+
     ctkMacroBuildLibWrapper(
       NAMESPACE "osb" # Use "osb" instead of "org.slicer.base" to avoid build error on windows
       TARGET ${lib_name}
       SRCS "${SLICERQTBASELIB_SRCS}"
       INSTALL_BIN_DIR ${Slicer_INSTALL_BIN_DIR}
-      INSTALL_LIB_DIR ${Slicer_INSTALL_LIB_DIR}
+      INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
       )
     set_target_properties(${lib_name}PythonQt PROPERTIES FOLDER "Core-Base")
   endif()
diff --git a/CMake/SlicerMacroBuildScriptedModule.cmake b/CMake/SlicerMacroBuildScriptedModule.cmake
index 3cf67d465..8938fd762 100644
--- a/CMake/SlicerMacroBuildScriptedModule.cmake
+++ b/CMake/SlicerMacroBuildScriptedModule.cmake
@@ -97,12 +97,16 @@ macro(slicerMacroBuildScriptedModule)
     set(_no_install_subdir_option "")
   endif()
 
+  if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${Slicer_INSTALL_QTSCRIPTEDMODULES_LIB_DIR}")
+  endif()
+  
   ctkMacroCompilePythonScript(
     TARGET_NAME ${MY_SLICER_NAME}
     SCRIPTS "${MY_SLICER_SCRIPTS}"
     RESOURCES "${MY_SLICER_RESOURCES}"
     DESTINATION_DIR ${CMAKE_BINARY_DIR}/${Slicer_QTSCRIPTEDMODULES_LIB_DIR}${_destination_subdir}
-    INSTALL_DIR ${Slicer_INSTALL_QTSCRIPTEDMODULES_LIB_DIR}
+    INSTALL_DIR ${PYTHON_SITE_DIR}
     ${_no_install_subdir_option}
     )
 
diff --git a/CMake/SlicerMacroPythonWrapModuleVTKLibrary.cmake b/CMake/SlicerMacroPythonWrapModuleVTKLibrary.cmake
index fdd967794..c1c6fa5e9 100644
--- a/CMake/SlicerMacroPythonWrapModuleVTKLibrary.cmake
+++ b/CMake/SlicerMacroPythonWrapModuleVTKLibrary.cmake
@@ -73,11 +73,15 @@ macro(SlicerMacroPythonWrapModuleVTKLibrary)
     ${PYTHONWRAPMODULEVTKLIBRARY_WRAPPED_TARGET_LIBRARIES}
     )
 
+  if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${Slicer_INSTALL_QTLOADABLEMODULES_LIB_DIR}")
+  endif()
+  
   vtkMacroKitPythonWrap(
     KIT_NAME ${PYTHONWRAPMODULEVTKLIBRARY_NAME}
     KIT_SRCS ${PYTHONWRAPMODULEVTKLIBRARY_SRCS}
     KIT_INSTALL_BIN_DIR ${Slicer_INSTALL_QTLOADABLEMODULES_BIN_DIR}
-    KIT_INSTALL_LIB_DIR ${Slicer_INSTALL_QTLOADABLEMODULES_LIB_DIR}
+    KIT_INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     KIT_PYTHON_LIBRARIES ${PYTHONWRAPMODULEVTKLIBRARY_Wrapped_LIBRARIES}
     )
 
diff --git a/Libs/MRML/CLI/CMakeLists.txt b/Libs/MRML/CLI/CMakeLists.txt
index b9f641518..7881ca46d 100644
--- a/Libs/MRML/CLI/CMakeLists.txt
+++ b/Libs/MRML/CLI/CMakeLists.txt
@@ -135,12 +135,16 @@ install(TARGETS ${lib_name}
 if(VTK_WRAP_PYTHON)
   include(vtkMacroKitPythonWrap)
 
+  if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${${PROJECT_NAME}_INSTALL_LIB_DIR}")
+  endif()
+  
   vtkMacroKitPythonWrap(
     KIT_NAME ${lib_name}
     KIT_SRCS ${MRMLCLI_SRCS}
     KIT_PYTHON_LIBRARIES MRMLCorePythonD
     KIT_INSTALL_BIN_DIR ${${PROJECT_NAME}_INSTALL_BIN_DIR}
-    KIT_INSTALL_LIB_DIR ${${PROJECT_NAME}_INSTALL_LIB_DIR}
+    KIT_INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     )
   # Export target
   export(TARGETS ${lib_name}Python ${lib_name}PythonD APPEND FILE ${${PROJECT_NAME}_EXPORT_FILE})
diff --git a/Libs/MRML/Core/CMakeLists.txt b/Libs/MRML/Core/CMakeLists.txt
index 7a3e6b301..7b3a3d9ec 100644
--- a/Libs/MRML/Core/CMakeLists.txt
+++ b/Libs/MRML/Core/CMakeLists.txt
@@ -320,11 +320,16 @@ install(TARGETS ${lib_name}
 # Python Wrapping
 # --------------------------------------------------------------------------
 if(VTK_WRAP_PYTHON)
+
+  if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${${PROJECT_NAME}_INSTALL_LIB_DIR}")
+  endif()
+
   vtkMacroKitPythonWrap(
     KIT_NAME ${lib_name}
     KIT_SRCS ${MRMLCore_SRCS}
     KIT_INSTALL_BIN_DIR ${${PROJECT_NAME}_INSTALL_BIN_DIR}
-    KIT_INSTALL_LIB_DIR ${${PROJECT_NAME}_INSTALL_LIB_DIR}
+    KIT_INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     )
   # Export target
   export(TARGETS ${lib_name}Python ${lib_name}PythonD APPEND FILE ${${PROJECT_NAME}_EXPORT_FILE})
diff --git a/Libs/MRML/Widgets/CMakeLists.txt b/Libs/MRML/Widgets/CMakeLists.txt
index d27ffc497..6a4c2eaea 100644
--- a/Libs/MRML/Widgets/CMakeLists.txt
+++ b/Libs/MRML/Widgets/CMakeLists.txt
@@ -530,13 +530,19 @@ endif()
 # PythonQt wrapping
 # --------------------------------------------------------------------------
 if(MRMLWidgets_WRAP_PYTHON)
+
+  if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${Slicer_INSTALL_LIB_DIR}")
+  endif()
+
   ctkMacroBuildLibWrapper(
     NAMESPACE "org.slicer.libs"
     TARGET ${lib_name}
     SRCS "${MRMLWidgets_SRCS}"
     INSTALL_BIN_DIR ${Slicer_INSTALL_BIN_DIR}
-    INSTALL_LIB_DIR ${Slicer_INSTALL_LIB_DIR}
+    INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     )
+  
   # Folder
   if(NOT "${${PROJECT_NAME}_FOLDER}" STREQUAL "")
     set_target_properties(${lib_name}PythonQt PROPERTIES FOLDER ${${PROJECT_NAME}_FOLDER})
diff --git a/Libs/vtkAddon/CMakeLists.txt b/Libs/vtkAddon/CMakeLists.txt
index aaa36a28e..5972bdd61 100644
--- a/Libs/vtkAddon/CMakeLists.txt
+++ b/Libs/vtkAddon/CMakeLists.txt
@@ -174,11 +174,15 @@ install(TARGETS ${lib_name}
 if(VTK_WRAP_PYTHON)
   include(vtkMacroKitPythonWrap)
 
+  if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${${PROJECT_NAME}_INSTALL_LIB_DIR}")
+  endif()
+
   vtkMacroKitPythonWrap(
     KIT_NAME ${lib_name}
     KIT_SRCS ${vtkAddon_SRCS}
     KIT_INSTALL_BIN_DIR ${${PROJECT_NAME}_INSTALL_BIN_DIR}
-    KIT_INSTALL_LIB_DIR ${${PROJECT_NAME}_INSTALL_LIB_DIR}
+    KIT_INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     )
   # Export target
   export(TARGETS ${lib_name}Python ${lib_name}PythonD APPEND FILE ${${PROJECT_NAME}_EXPORT_FILE})
diff --git a/Libs/vtkSegmentationCore/CMakeLists.txt b/Libs/vtkSegmentationCore/CMakeLists.txt
index 46ecf37d3..d59aba8db 100644
--- a/Libs/vtkSegmentationCore/CMakeLists.txt
+++ b/Libs/vtkSegmentationCore/CMakeLists.txt
@@ -153,11 +153,15 @@ if(VTK_WRAP_PYTHON AND BUILD_SHARED_LIBS)
 
   include(vtkMacroKitPythonWrap)
 
+    if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${${PROJECT_NAME}_INSTALL_LIB_DIR}")
+  endif()
+  
   vtkMacroKitPythonWrap(
     KIT_NAME ${PROJECT_NAME}
     KIT_SRCS ${vtkSegmentationCore_SRCS}
     KIT_INSTALL_BIN_DIR ${${PROJECT_NAME}_INSTALL_BIN_DIR}
-    KIT_INSTALL_LIB_DIR ${${PROJECT_NAME}_INSTALL_LIB_DIR}
+    KIT_INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     )
 
   # Export target
diff --git a/Libs/vtkTeem/CMakeLists.txt b/Libs/vtkTeem/CMakeLists.txt
index 5106e7e4a..3767c75e1 100644
--- a/Libs/vtkTeem/CMakeLists.txt
+++ b/Libs/vtkTeem/CMakeLists.txt
@@ -146,13 +146,18 @@ install(TARGETS ${lib_name}
 # Python Wrapping
 # --------------------------------------------------------------------------
 if(VTK_WRAP_PYTHON)
+
   include(vtkMacroKitPythonWrap)
 
+  if(NOT DEFINED PYTHON_SITE_DIR)
+    set(PYTHON_SITE_DIR "${${PROJECT_NAME}_INSTALL_LIB_DIR}")
+  endif()
+
   vtkMacroKitPythonWrap(
     KIT_NAME ${lib_name}
     KIT_SRCS ${vtkTeem_SRCS}
     KIT_INSTALL_BIN_DIR ${${PROJECT_NAME}_INSTALL_BIN_DIR}
-    KIT_INSTALL_LIB_DIR ${${PROJECT_NAME}_INSTALL_LIB_DIR}
+    KIT_INSTALL_LIB_DIR ${PYTHON_SITE_DIR}
     )
   # Export target
   export(TARGETS ${lib_name}Python ${lib_name}PythonD APPEND FILE ${${PROJECT_NAME}_EXPORT_FILE})
-- 
2.24.1

